"""Telegram Ping / Pong Speed
Syntax: .ping"""

import time
import random
from pyrogram import Client, filters
from info import COMMAND_HAND_LER
from plugins.helper_functions.cust_p_filters import f_onw_fliter

# -- Constants -- #
ALIVE = "‡¥ö‡¥§‡µç‡¥§‡¥ø‡¥ü‡µç‡¥ü‡¥ø‡¥≤‡µç‡¥≤ ‡¥Æ‡µÅ‡¥§‡µç‡¥§‡µá ‡¥á‡¥µ‡¥ø‡¥ü‡µÜ ‡¥§‡¥®‡µç‡¥®‡µÜ ‡¥â‡¥£‡µç‡¥ü‡µç.. ‡¥®‡¥ø‡¥®‡¥ï‡µç‡¥ï‡µç ‡¥á‡¥™‡µç‡¥™‡µä ‡¥é‡¥®‡µç‡¥®‡µã‡¥ü‡µç ‡¥í‡¥∞‡µÅ ‡¥∏‡µç‡¥®‡µá‡¥π‡¥µ‡µÅ‡¥Ç ‡¥á‡¥≤‡µç‡¥≤. ‡¥ï‡µä‡¥≥‡µç‡¥≥‡¥æ‡¥Ç.. ‡¥®‡µÄ ‡¥™‡¥æ‡¥¥‡µÜ ‡¥™‡µã‡¥≤‡µÜ‡¥Ø‡µá ‡¥Ö‡¥≤‡µç‡¥≤ ‡¥Æ‡¥æ‡¥±‡¥ø‡¥™‡µã‡¥Ø‡¥ø..üòî ‡¥á‡¥ü‡¥ï‡µç‡¥ï‡µç ‡¥é‡¥ô‡µç‡¥ï‡¥ø‡¥≤‡µÅ‡¥Ç ‡¥ö‡µÅ‡¥Æ‡µç‡¥Æ‡¥æ ‡¥í‡¥®‡µç‡¥®‡µç Start ‡¥ö‡µÜ‡¥Ø‡µç‡¥§‡µÅ ‡¥®‡µã‡¥ï‡µç‡¥ï‡µç..üôÇ" 
HELP = "@Client.on_message(filters.command("help"))
async def help(client, message):
   buttons = [[
            InlineKeyboardButton('M·¥Ä…¥·¥ú·¥á ü F…™ ü·¥õ·¥á Ä', callback_data='manuelfilter'),
            InlineKeyboardButton('A·¥ú·¥õ·¥è F…™ ü·¥õ·¥á Ä', callback_data='autofilter'),
            InlineKeyboardButton('C·¥è…¥…¥·¥á·¥Ñ·¥õ…™·¥è…¥s', callback_data='coct')
            ],[
            InlineKeyboardButton('S·¥è…¥…¢', callback_data='songs'),
            InlineKeyboardButton('Ex·¥õ Ä·¥Ä', callback_data='extra'),
            InlineKeyboardButton("V…™·¥Ö·¥á·¥è", callback_data='video')
            ],[
            InlineKeyboardButton('P…™…¥', callback_data='pin'), 
            InlineKeyboardButton('P·¥Äs·¥õ·¥á', callback_data='pastes'),
            InlineKeyboardButton("I·¥ç·¥Ä…¢·¥á", callback_data='image')
            ],[
            InlineKeyboardButton('F·¥ú…¥', callback_data='fun'), 
            InlineKeyboardButton('Js·¥è…¥', callback_data='son'),
            InlineKeyboardButton('TTS', callback_data='ttss')
            ],[
            InlineKeyboardButton('P·¥ú Ä…¢·¥á', callback_data='purges'),
            InlineKeyboardButton('P…™…¥…¢', callback_data='pings'),
            InlineKeyboardButton('T·¥á ü·¥á…¢ Ä·¥Ä·¥ò ú', callback_data='tele')
            ],[
            InlineKeyboardButton('W ú·¥è…™s', callback_data='whois'),
            InlineKeyboardButton('M·¥ú·¥õ·¥á', callback_data='restric'),
            InlineKeyboardButton('K…™·¥Ñ·¥ã', callback_data='zombies')
            ],[
            InlineKeyboardButton('R·¥á·¥ò·¥è Ä·¥õ', callback_data='report'),
            InlineKeyboardButton('Y·¥õ-T ú·¥ú·¥ç ô', callback_data='ytthumb'),
            InlineKeyboardButton('S·¥õ…™·¥Ñ·¥ã·¥á Ä-I·¥Ö', callback_data='sticker')
            ],[
            InlineKeyboardButton('C·¥è·¥†…™·¥Ö', callback_data='corona'),
            InlineKeyboardButton('A·¥ú·¥Ö…™·¥è-B·¥è·¥è·¥ã', callback_data='abook'),
            InlineKeyboardButton('U Ä ü-S ú·¥è Ä·¥õ', callback_data='urlshort')
            ],[
            InlineKeyboardButton('G-T Ä·¥Ä…¥s', callback_data='gtrans'),
            InlineKeyboardButton('F…™ ü·¥á-S·¥õ·¥è Ä·¥á', callback_data='newdata'),
            InlineKeyboardButton('S ú·¥Ä Ä·¥á-T·¥áx·¥õ', callback_data='sharetext'),
            ],[
            InlineKeyboardButton('P·¥Äss·¥°·¥è Ä·¥Ö-G·¥á…¥', callback_data='genpassword'),
            InlineKeyboardButton('A·¥ò·¥ò Ä·¥è·¥†·¥á', callback_data='approve'),
            InlineKeyboardButton('G Ä·¥á·¥á·¥õ…¥…¢s', callback_data='welcome'),
            ],[
            InlineKeyboardButton('L·¥è·¥Ñ·¥ãs', callback_data='lock'),
            InlineKeyboardButton('N·¥è·¥õ·¥ás', callback_data='note'),
            InlineKeyboardButton('P·¥ú Ä…¢·¥á', callback_data='purge'),
            ],[
            InlineKeyboardButton('R·¥ú ü·¥ás', callback_data='rule'),
            InlineKeyboardButton('U Ä ü-S ú·¥è Ä·¥õ…¥·¥á Ä', callback_data='url'),
            InlineKeyboardButton('T·¥è Ä Ä·¥á…¥·¥õ', callback_data='torrent'),
            ],[
            InlineKeyboardButton('B·¥Ä·¥Ñ·¥ã', callback_data='start'),
            InlineKeyboardButton('S·¥õ·¥Ä·¥õ·¥ús', callback_data='stats'),
            InlineKeyboardButton('C ü·¥ès·¥á ‚úó', callback_data='close_data')
        ]]
        reply_markup = InlineKeyboardMarkup(buttons)
        await query.message.edit_text(
            text=script.HELP_TXT.format(query.from_user.mention),
            reply_markup=reply_markup,
            parse_mode='html'
        )"
REPO = "Oops The repo is Vanished Because of CopyCats"
# -- Constants End -- #


@Client.on_message(filters.command("alive", COMMAND_HAND_LER) & f_onw_fliter)
async def check_alive(_, message):
    await message.reply_text(ALIVE)


@Client.on_message(filters.command("help", COMMAND_HAND_LER) & f_onw_fliter)
async def help_me(_, message):
    await message.reply_text(HELP)


@Client.on_message(filters.command("ping", COMMAND_HAND_LER) & f_onw_fliter)
async def ping(_, message):
    start_t = time.time()
    rm = await message.reply_text("...")
    end_t = time.time()
    time_taken_s = (end_t - start_t) * 1000
    await rm.edit(f"Pong!\n{time_taken_s:.3f} ms")


@Client.on_message(filters.command("repo", COMMAND_HAND_LER) & f_onw_fliter)
async def repo(_, message):
    await message.reply_text(REPO)
